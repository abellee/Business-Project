package modules{	import events.IOEvent;		import flash.display.Sprite;	import flash.events.MouseEvent;	import flash.text.TextField;	import flash.text.TextFieldAutoSize;	import flash.text.TextFormat;		public class CateContainer extends Sprite	{				private var cateMC:CateMC = new CateMC();		private var ccBK:ChildCate = new ChildCate();				private var txtFormat2:TextFormat = new TextFormat();				private var xml:XMLList;		private var curPage:uint = 0;		private var curT:uint = 0;				public function CateContainer()		{			super();			init();		}		private function init():void{						txtFormat2.font = "黑体";			txtFormat2.size = 15;			txtFormat2.color = 0xC8FF00;			txtFormat2.bold = false;						this.addChild(cateMC);			this.width = cateMC.width;			this.height = cateMC.height;					}		public function setCate(xmlList:XMLList, ct:uint):void{						xml = xmlList;			curT = ct;						while(ccBK.numChildren > 1){								ccBK.getChildAt(ccBK.numChildren - 1).removeEventListener(MouseEvent.CLICK, cateClick)				ccBK.removeChildAt(ccBK.numChildren - 1);							}			var txl:XMLList;			switch(ct){								case 1:					txl = xmlList.sort;					break;				case 2:					txl = xmlList.zone;					break;				case 3:					txl = xmlList.year;					break;							}			for(var i:int=0; i<txl.children().length(); i++){								var txtC:Sprite = new Sprite();				txtC.mouseChildren = false;				txtC.buttonMode = true;				var o:XML = txl.children()[i];				var txt:TextField = new TextField();				txt.autoSize = TextFieldAutoSize.LEFT;				txt.defaultTextFormat = txtFormat2;				txt.text = o.text();				txtC.name = o.@id;				txt.selectable = false;				txtC.addChild(txt);				txt.width = 15;				txt.height = 20;				txtC.width = 15;				txtC.height = 20;				ccBK.mouseEnabled = false;				ccBK.addChild(txtC);				txtC.x = ((i+1) % 9) * (txtC.width + 5) + 107;				txtC.y = Math.floor((i+1) / 9) * (txtC.height + 5) + 14;				txtC.addEventListener(MouseEvent.CLICK, cateClick);							}						cateMC.cateAll.cateMC.buttonMode = true;			cateMC.areaAll.cateMC.buttonMode = true;			cateMC.timeAll.cateMC.buttonMode = true;			cateMC.versionAll.cateMC.buttonMode = true;						cateMC.cateAll.cateMC.addEventListener(MouseEvent.MOUSE_OVER, showAllCate);			cateMC.cateAll.addEventListener(MouseEvent.ROLL_OUT, hideAllCate);			cateMC.cateAll.cateMC.addEventListener(MouseEvent.CLICK, loadAll);						cateMC.areaAll.cateMC.addEventListener(MouseEvent.MOUSE_OVER, showAllCate);			cateMC.areaAll.addEventListener(MouseEvent.ROLL_OUT, hideAllCate);			cateMC.areaAll.cateMC.addEventListener(MouseEvent.CLICK, loadAll);						cateMC.timeAll.cateMC.addEventListener(MouseEvent.MOUSE_OVER, showAllCate);			cateMC.timeAll.addEventListener(MouseEvent.ROLL_OUT, hideAllCate);			cateMC.timeAll.cateMC.addEventListener(MouseEvent.CLICK, loadAll);						cateMC.versionAll.cateMC.addEventListener(MouseEvent.MOUSE_OVER, showAllCate);			cateMC.versionAll.addEventListener(MouseEvent.ROLL_OUT, hideAllCate);			cateMC.versionAll.cateMC.addEventListener(MouseEvent.CLICK, loadAll);					}		private function showAllCate(event:MouseEvent):void{						var curType:uint = 0;			switch(event.currentTarget.parent.name){								case "cateAll":					curType = 1;					break;				case "areaAll":					curType = 2;					break;				case "timeAll":					curType = 3;					break;				case "versionAll":					curType = 4;					setVersionCate();					event.currentTarget.cateImg.scaleX = event.currentTarget.cateImg.scaleY = 1.2;					event.currentTarget.parent.addChildAt(ccBK, 0);					ccBK.y = 10;					ccBK.visible = true;					return;					break;							}			setCate(xml, curType);			event.currentTarget.cateImg.scaleX = event.currentTarget.cateImg.scaleY = 1.2;			event.currentTarget.parent.addChildAt(ccBK, 0);			ccBK.y = 10;			ccBK.visible = true;					}		private function setVersionCate():void{						var arr:Array = ["标清", "高清"];			curT = 4;			while(ccBK.numChildren > 1){								ccBK.getChildAt(ccBK.numChildren - 1).removeEventListener(MouseEvent.CLICK, cateClick)				ccBK.removeChildAt(ccBK.numChildren - 1);							}			for (var i:uint=0; i < arr.length; i++){								var txtC:Sprite = new Sprite();				txtC.mouseChildren = false;				txtC.buttonMode = true;				var txt:TextField = new TextField();				txt.autoSize = TextFieldAutoSize.LEFT;				txt.defaultTextFormat = txtFormat2;				txt.text = arr[i];				txtC.name = i+"";				txt.selectable = false;				txtC.addChild(txt);				txt.width = 15;				txt.height = 20;				txtC.width = 15;				txtC.height = 20;				ccBK.mouseEnabled = false;				ccBK.addChild(txtC);				txtC.x = ((i+1) % 9) * (txtC.width + 5) + 107;				txtC.y = Math.floor((i+1) / 9) * (txtC.height + 5) + 12;				txtC.addEventListener(MouseEvent.CLICK, cateClick);							}			cateMC.versionAll.cateMC.addEventListener(MouseEvent.MOUSE_OVER, showAllCate);			cateMC.versionAll.addEventListener(MouseEvent.ROLL_OUT, hideAllCate);			cateMC.versionAll.cateMC.addEventListener(MouseEvent.CLICK, loadAll);					}		private function hideAllCate(event:MouseEvent):void{						event.currentTarget.cateMC.cateImg.scaleX = event.currentTarget.cateMC.cateImg.scaleY = 1.0;			ccBK.visible = false;					}		private function loadAll(event:MouseEvent):void{						this.dispatchEvent(new IOEvent(IOEvent.ALL_MOVIE));					}		private function cateClick(event:MouseEvent):void{						var cateBtn:Sprite = event.target as Sprite;						var ioEvent:IOEvent = new IOEvent(IOEvent.CHILD_CATE);			ioEvent.result = {};			ioEvent.result.name = cateBtn.name;			ioEvent.result.curType = this.curT;						this.dispatchEvent(ioEvent);					}	}}
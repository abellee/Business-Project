package modules{	import com.greensock.TweenLite;		import events.IOEvent;		import flash.display.Sprite;	import flash.display.Stage;	import flash.events.Event;	import flash.events.MouseEvent;	import flash.geom.Rectangle;		public class ScrollModule extends Sprite	{				private var scrollMC:ScrollMC = new ScrollMC();		private var thumbBtn:ThumbBtn = new ThumbBtn();		private var toolTip:ToolTip = new ToolTip();				private var _numPerPage:uint = 21;		private var _totalPage:uint = 100;		private var _curPage:uint = 1;				private var bool:Boolean = false;				public function ScrollModule()		{			super();			init();		}		private function init():void{						this.addChild(scrollMC);			this.addChild(thumbBtn);			this.addChild(toolTip);						thumbBtn.x = 23;			thumbBtn.y = 5;			thumbBtn.buttonMode = true;			thumbBtn.mouseChildren = false;						toolTip.x = thumbBtn.x + thumbBtn.width / 2;			toolTip.y = 5;			toolTip.alpha = 0;						thumbBtn.addEventListener(MouseEvent.MOUSE_DOWN, dragThumbBar);			thumbBtn.addEventListener(MouseEvent.MOUSE_OVER, showToolTip);			thumbBtn.addEventListener(MouseEvent.MOUSE_OUT, hideToolTip);						scrollMC.leftBtn.addEventListener(MouseEvent.CLICK, prePage);			scrollMC.rightBtn.addEventListener(MouseEvent.CLICK, nextPage);					}		private function dragThumbBar(event:MouseEvent):void{						bool = true;			this.addEventListener(Event.ENTER_FRAME, moveToolTip);			thumbBtn.startDrag(false, new Rectangle(23, 5, 657, 0));					}		public function dropThumbBar():void{						this.removeEventListener(Event.ENTER_FRAME, moveToolTip);			thumbBtn.stopDrag();						if(bool){								var tx:uint = uint((_curPage - 1) * (657 / (_totalPage-1))) + 23;				TweenLite.to(thumbBtn, .3, {x:tx});				toolTip.x = tx + thumbBtn.width / 2;				var evt:IOEvent = new IOEvent(IOEvent.FLIP_PAGE);				evt.result = {};				evt.result = _curPage;				this.dispatchEvent(evt);								}			bool = false;					}		private function moveToolTip(event:Event):void{						toolTip.x = thumbBtn.x + thumbBtn.width / 2;			_curPage = uint((thumbBtn.x - 23) / (657 / (_totalPage - 1))) + 1;			toolTip.tipTxt.text = "共"+ _numPerPage * _totalPage + "部 "+ _curPage + "/" + _totalPage + "页";					}		private function showToolTip(event:MouseEvent):void{						TweenLite.to(toolTip, .3, {alpha:1});					}		private function hideToolTip(event:MouseEvent):void{						TweenLite.to(toolTip, .3, {alpha:0});					}		private function nextPage(event:MouseEvent):void{						if(_curPage == _totalPage){								return;							}			_curPage ++;			var tx:uint = uint((_curPage - 1) * (657 / (_totalPage-1))) + 23;			TweenLite.to(thumbBtn, .3, {x:tx});			toolTip.x = tx + thumbBtn.width / 2;			toolTip.tipTxt.text = "共"+ _numPerPage * _totalPage + "部 "+ _curPage + "/" + _totalPage + "页";						var evt:IOEvent = new IOEvent(IOEvent.FLIP_PAGE);			evt.result = {};			evt.result = _curPage;			this.dispatchEvent(evt);					}		private function prePage(event:MouseEvent):void{						if(_curPage <= 1){								return;							}			_curPage --;			var tx:uint = uint((_curPage - 1) * (657 / (_totalPage - 1))) + 23;			TweenLite.to(thumbBtn, .3, {x:tx});			toolTip.x = tx + thumbBtn.width / 2;			toolTip.tipTxt.text = "共"+ _numPerPage * _totalPage + "部 "+ _curPage + "/" + _totalPage + "页";						var evt:IOEvent = new IOEvent(IOEvent.FLIP_PAGE);			evt.result = {};			evt.result = _curPage;			this.dispatchEvent(evt);					}				public function set totalPage(p:uint):void{						_totalPage = p;			toolTip.tipTxt.text = "共"+ _numPerPage * _totalPage + "部 "+ _curPage + "/" + _totalPage + "页";					}				public function get totalPage():uint{						return _totalPage;					}				public function set curPage(p:uint):void{						_curPage = p;					}				public function get curPage():uint{						return _curPage;					}				public function set numPerPage(num:uint):void{						_numPerPage = num;					}				public function get numPerPage():uint{						return _numPerPage;					}		public function resetScrollModule():void{						_curPage = 1;			thumbBtn.x = 23;			thumbBtn.y = 5;			toolTip.x = thumbBtn.x + thumbBtn.width / 2;			toolTip.y = 5;			toolTip.alpha = 0;					}	}}